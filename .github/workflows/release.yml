name: Build Release

on:
  push:
    tags:
      - v*

env:
  APP_PACK_NAME: iwrqk

permissions:
  contents: write

jobs:
  build_and_upload:
    name: Build releases
    strategy:
      matrix:
        include:
          - target: android
            os: ubuntu-latest
            flutter_version: '3.16'
            flutter_channel: 'stable'
            artifact_name: release-apk
            artifact_path: build/app/outputs/apk/release/*.apk
          - target: ios
            os: macos-12
            flutter_version: '3.16'
            flutter_channel: 'stable'
            artifact_name: release-ios
            artifact_path: build/ios/ipa/*.ipa
          - target: windows
            os: windows-latest
            flutter_version: '3.16'
            flutter_channel: 'stable'
            artifact_name: release-windows
            artifact_path: build/windows/*.exe
          - target: web
            os: ubuntu-latest
            flutter_version: '3.16'
            flutter_channel: 'stable'
            artifact_name: release-web
            artifact_path: build/web/**

    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{matrix.flutter_version}}
          channel: ${{matrix.flutter_channel}}

      - name: Setup JDK 11 (Android)
        if: matrix.target == 'android'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: gradle

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build resolve Swift dependencies (iOS)
        if: matrix.target == 'ios'
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

      - name: Get app version
        id: get_version
        shell: bash
        run: |
          echo "::set-output name=version::$(grep -m1 version: pubspec.yaml | awk '{print $2}' | sed 's/\"//g')"

      - name: Build APKs (Android)
        if: matrix.target == 'android'
        run: flutter build apk --release
        env:
          KEYSTORE_PASSWORD: ${{secrets.KEYSTORE_PASSWORD}}
          KEY_ALIAS: ${{secrets.KEY_ALIAS}}
          KEY_PASSWORD: ${{secrets.KEY_PASSWORD}}

      - name: Build release (iOS)
        if: matrix.target == 'ios'
        run: flutter build ios --release --no-codesign

      - name: Build exe (Windows)
        if: matrix.target == 'windows'
        run: flutter build windows

      - name: Build web (Web)
        if: matrix.target == 'web'
        run: flutter build web

      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.artifact_name}}
          path: ${{matrix.artifact_path}}

  publish_release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Publish release
    needs: build_and_upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: mkdir /tmp/artifacts

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts

      - name: Get app version
        id: get_version
        shell: bash
        run: |
          echo "::set-output name=version::$(grep -m1 version: pubspec.yaml | awk '{print $2}' | sed 's/\"//g')"

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/artifacts/release-apk/*.apk,/tmp/artifacts/release-ios/*.ipa,/tmp/artifacts/release-windows/*.exe,/tmp/artifacts/release-web/**"
          tag: ${{github.ref_name}}
          bodyFile: changelogs/v${{steps.get_version.outputs.version}}.md
          prerelease: contains(github.ref, 'pre')
          allowUpdates: true
          artifactErrorsFailBuild: true
          replacesArtifacts: true

      - name: Deploy to GitHub Pages (Web)
        if: matrix.target == 'web'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web
