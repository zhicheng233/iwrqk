plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystorePropertiesFile.withReader('UTF-8') { reader ->
        keystoreProperties.load(reader)
    }
}

def _keyAlias = System.getenv("KEY_ALIAS") ?: keystoreProperties.getProperty("keyAlias")
def _keyPassword = System.getenv("KEY_PASSWORD") ?: keystoreProperties.getProperty("keyPassword")
def _storeFile = file(System.getenv("KEYSTORE") ?: keystoreProperties.getProperty("storeFile") ?: "keystore.jks")
def _storePassword = System.getenv("KEYSTORE_PASSWORD") ?: keystoreProperties.getProperty("storePassword")
def _canSign = _keyAlias != null && _keyPassword != null && _storeFile.exists() && _storePassword != null

android {
    namespace "com.iwrqk.app"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.readboy.iwrqk.app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        minSdkVersion 24
        multiDexEnabled true
        archivesBaseName = "iwrqk-$versionName+$versionCode"
        splits {
            abi {
                enable true
                reset()
                universalApk true
                include "armeabi-v7a", "arm64-v8a", "x86_64"
            }
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newName = output.outputFileName
            newName = newName.replace("-release", "")
            output.outputFileName = newName
        }
    }

    if (_canSign) {
        android.signingConfigs {
            debug {
                storeFile _storeFile
                storePassword _storePassword
                keyAlias _keyAlias
                keyPassword _keyPassword
                v1SigningEnabled true
                v2SigningEnabled true
            }
            release {
                storeFile _storeFile
                storePassword _storePassword
                keyAlias _keyAlias
                keyPassword _keyPassword
                v1SigningEnabled true
                v2SigningEnabled true
            }
        }
        buildTypes {
            release {
                if (signingConfigs.release.storePassword != null){
                    signingConfig signingConfigs.release
                }
                minifyEnabled true
                shrinkResources true
            }
            debug {
                if (signingConfigs.debug.storePassword != null){
                    signingConfig signingConfigs.debug
                }
                minifyEnabled true
                shrinkResources true
            }
        }
    } else {
        buildTypes {
            release {
                signingConfig signingConfigs.debug
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
